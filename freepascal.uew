/L20"FreePascal" PASCAL_LANG Nocase Block Comment On = (* Block Comment Off = *) Block Comment On Alt = { Block Comment Off Alt = } Line Comment = // Escape Char = \ String Chars = '" File Extensions = PAS INC DEF LPR
/Delimiters = ~!@%^&*()-+=|\/{}[]:;"'<> ,	.?
/Function String = "procedure[ ^t]^([a-z_0-9^$]+^)[ ^t]++[(;^p]"
/Function String 1 = "function[ ^t]^([a-z_0-9^$]+^)[ ^t]++[(;:^p]"
/Function String 2 = "^([a-z_0-9^$]+^)[ ^t]+=[ ^t^p]+record"
/Indent Strings = "BEGIN" "CASE" "DO" "ELSE" "THEN"
/Unindent Strings = "END;" "END"
/C1"Reserved words"
absolute
array
as
asm
begin
break
case
class
const
constructor
continue
destructor
dispinterface
dispose
do
downto
else
end
except
exit
exports
file
finalization
finally
for
function
goto
if
implementation
in
inherited
initialization
inline
interface
is
label
library
new
nil
object
of
on
operator
out
packed
procedure
program
property
raise
record
repeat
resourcestring
self
set
string
then
threadvar
to
try
type
unit
until
uses
var
while
with
/C2"Modifiers"
abstract
alias
assembler
bitpacked
cdecl
cppdecl
cvar
default
deprecated
dynamic
enumerator
experimental
export
external
far
far16
forward
generic
helper
implements
index
interrupt
iocheck
local
message
name
near
nodefault
noreturn
nostackframe
oldfpccall
otherwise
overload
override
pascal
platform
private
protected
public
published
read
register
reintroduce
result
safecall
saveregisters
softfloat
specialize
static
stdcall
stored
strict
unaligned
unimplemented
varargs
virtual
write
/C3"Predefined identifiers"
abs
ansistring
arctan
boolean
byte
bytebool
cardinal
char
comp
cos
currency
eof
eoln
exp
extended
false
input
int64
integer
ln
longbool
longint
longword
maxint
odd
ord
output
pack
page
pred
qword
qwordbool
readln
real
reset
rewrite
round
shortint
shortstring
sin
smallint
sqr
sqrt
succ
text
true
trunc
widechar
widestring
word
wordbool
writeln
/C5"Operators"
+
-
>
<
^
:
=
div
mod
not
and
or
xor
shl
shr
*
// /
